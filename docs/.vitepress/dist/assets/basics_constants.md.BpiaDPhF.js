import{_ as a,c as i,o as t,ae as n}from"./chunks/framework.B8KKhRA6.js";const c=JSON.parse('{"title":"Constants","description":"","frontmatter":{},"headers":[],"relativePath":"basics/constants.md","filePath":"basics/constants.md"}'),e={name:"basics/constants.md"};function l(h,s,p,o,r,k){return t(),i("div",null,s[0]||(s[0]=[n(`<h1 id="constants" tabindex="-1">Constants <a class="header-anchor" href="#constants" aria-label="Permalink to &quot;Constants&quot;">​</a></h1><h2 id="integer-constants" tabindex="-1">Integer Constants <a class="header-anchor" href="#integer-constants" aria-label="Permalink to &quot;Integer Constants&quot;">​</a></h2><p>Numbers are a fundamental element of every programming language. They can be used for calculations using binary operations, and can provide you with a tool to compare anything with boolean (0 for false, 1 for true) representation. <br> All concepts, such as bytes, strings, objects, etc., are ultimately just numbers. <br></p><p>The <strong>Genpay</strong> compiler allows you to create number constants. <br> Currently supported ways to write numbers are: decimal, hexadecimal, and binary.</p><div class="language-genpay vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">genpay</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 3 ways to write &quot;1000&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // -- decimal</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1_000</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // -- decimal with separation</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0b111110100</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // -- binary</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x3E8</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // -- hexadecimal</span></span></code></pre></div><p>You can do any math operations with the provided constants:</p><div class="language-genpay vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">genpay</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0b1101</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0xF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="float-constants" tabindex="-1">Float Constants <a class="header-anchor" href="#float-constants" aria-label="Permalink to &quot;Float Constants&quot;">​</a></h2><p>Float constants are a highly useful element for mathematical calculations in programming. They allow you to maintain maximum accuracy in calculations. <br> To define a float constant, simply use decimal notation with a dot:</p><div class="language-genpay vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">genpay</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // default number</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">51</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // bigger number</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1415926535897932384626</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // PI number</span></span></code></pre></div><h2 id="boolean-constants" tabindex="-1">Boolean Constants <a class="header-anchor" href="#boolean-constants" aria-label="Permalink to &quot;Boolean Constants&quot;">​</a></h2><p>Boolean constants are just 1-bit numbers which represents comparison result (0 - false, 1 - true) <br> To define boolean constant use compiler keywords:</p><div class="language-genpay vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">genpay</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span></code></pre></div><h2 id="char-constants" tabindex="-1">Char Constants <a class="header-anchor" href="#char-constants" aria-label="Permalink to &quot;Char Constants&quot;">​</a></h2><p>A <strong>char</strong> is essentially an unsigned 8-bit integer that contains an ASCII symbol. To define a character constant, simply use single quotes:</p><div class="language-genpay vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">genpay</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&#39;a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&#39;b&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&#39;c&#39;</span></span></code></pre></div><h2 id="strings-constants" tabindex="-1">Strings Constants <a class="header-anchor" href="#strings-constants" aria-label="Permalink to &quot;Strings Constants&quot;">​</a></h2><p><strong>Strings</strong> in the Deen compiler are similar to those in the C programming language. <br> The core mechanics are as follows: every symbol is a <code>char</code>, and a string is simply a pointer to a <code>char</code> array. <br></p><p>To define a string constant, just use double quotes:</p><div class="language-genpay vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">genpay</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Something here&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello World!&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Do you reading this?&quot;</span></span></code></pre></div><h2 id="array-constants" tabindex="-1">Array Constants <a class="header-anchor" href="#array-constants" aria-label="Permalink to &quot;Array Constants&quot;">​</a></h2><p><strong>Array</strong> is a basic collection of ordered data in memory. <br> To define array constant use brackets:</p><div class="language-genpay vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">genpay</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">144</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h2 id="tuple-constants" tabindex="-1">Tuple Constants <a class="header-anchor" href="#tuple-constants" aria-label="Permalink to &quot;Tuple Constants&quot;">​</a></h2><p><strong>Tuple</strong> is the data structure that combines multiple types by its index. <br> To define tuple constant use parentheses:</p><div class="language-genpay vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">genpay</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&#39;a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// (i32, *char, char)</span></span></code></pre></div>`,26)]))}const g=a(e,[["render",l]]);export{c as __pageData,g as default};
