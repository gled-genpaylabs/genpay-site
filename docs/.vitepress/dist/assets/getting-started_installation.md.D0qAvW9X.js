import{_ as e,c as t,o as l,ae as i}from"./chunks/framework.B8KKhRA6.js";const g=JSON.parse('{"title":"Installation","description":"","frontmatter":{},"headers":[],"relativePath":"getting-started/installation.md","filePath":"getting-started/installation.md"}'),s={name:"getting-started/installation.md"};function n(o,a,r,p,h,d){return l(),t("div",null,a[0]||(a[0]=[i(`<h1 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h1><h2 id="simple-installation" tabindex="-1">Simple Installation <a class="header-anchor" href="#simple-installation" aria-label="Permalink to &quot;Simple Installation&quot;">​</a></h2><ol><li>Install a supported C compiler: <a href="https://clang.llvm.org/" target="_blank" rel="noreferrer">clang</a></li><li>Download the latest build for your system from GitHub: <a href="https://github.com/gled-genpaylabs/genpay/releases/latest" target="_blank" rel="noreferrer">Latest Release</a></li><li>Unpack it anywhere and add the executable to your <code>PATH</code> environment variable.</li><li>Set the <strong><code>GENPAY_LIB</code></strong> environment variable to the full path of the <strong><code>stdlib</code></strong> folder (located near the binary). Example: <code>/Users/gledsonjoaquimlopes/genpay/stdlib</code></li></ol><h2 id="build" tabindex="-1">Build <a class="header-anchor" href="#build" aria-label="Permalink to &quot;Build&quot;">​</a></h2><ol><li>Install the <a href="https://www.rust-lang.org/" target="_blank" rel="noreferrer">Rust Programming Language</a> from the official site.</li><li>Install <a href="https://www.llvm.org/docs/GettingStarted.html" target="_blank" rel="noreferrer">LLVM</a> following the official tutorial.</li><li>Clone this repository: <code>git clone https://github.com/gled-genpaylabs/genpay</code></li><li>Go to its directory and run: <code>cargo build --release</code></li><li>The executable file will be in the <code>target/release</code> folder.</li><li>Don&#39;t forget to set the <code>GENPAY_LIB</code> environment variable.</li></ol><h2 id="how-to-use" tabindex="-1">How to use? <a class="header-anchor" href="#how-to-use" aria-label="Permalink to &quot;How to use?&quot;">​</a></h2><ol><li>Write code. Example:</li></ol><div class="language-genpay vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">genpay</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// source.genpay</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> main() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">i32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  println!(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, World!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol start="2"><li>Compile (check CLI Reference for more):</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$&gt; genpay source.genpay output</span></span></code></pre></div><ol start="3"><li>Run the executable file:</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$&gt; ./output</span></span>
<span class="line"><span>Hello World!</span></span></code></pre></div>`,12)]))}const u=e(s,[["render",n]]);export{g as __pageData,u as default};
