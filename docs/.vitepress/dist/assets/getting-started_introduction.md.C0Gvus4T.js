import{_ as a,c as t,o as n,ae as r}from"./chunks/framework.B8KKhRA6.js";const h=JSON.parse('{"title":"What is Genpay?","description":"","frontmatter":{},"headers":[],"relativePath":"getting-started/introduction.md","filePath":"getting-started/introduction.md"}'),s={name:"getting-started/introduction.md"};function o(i,e,l,g,p,d){return n(),t("div",null,e[0]||(e[0]=[r('<h1 id="what-is-genpay" tabindex="-1">What is Genpay? <a class="header-anchor" href="#what-is-genpay" aria-label="Permalink to &quot;What is Genpay?&quot;">​</a></h1><p><strong>Genpay</strong> is a <strong>statically-typed</strong>, <strong>compiled</strong> programming language designed for <strong>simple and performant development</strong>. Genpay provides you <strong>with</strong> tools for building structured and efficient software with <strong>a</strong> focus on speed and manual control <strong>over every piece of your code</strong>.</p><p>The main syntax and ideas <strong>are taken</strong> from such languages as Rust, Zig, and C.</p><h2 id="how-it-works" tabindex="-1">How it works? <a class="header-anchor" href="#how-it-works" aria-label="Permalink to &quot;How it works?&quot;">​</a></h2><p>The <strong>compiler</strong> breaks the main process into separated stages of compilation: lexer, parser, semantic analyzer, and code generator. As <strong>its</strong> backend, Genpay uses LLVM, which provides maximum performance of the compiled binary (comparable with C).</p><h2 id="useful-links" tabindex="-1">Useful Links <a class="header-anchor" href="#useful-links" aria-label="Permalink to &quot;Useful Links&quot;">​</a></h2><ul><li>GitHub Repository: <a href="https://github.com/gled-genpaylabs/genpay" target="_blank" rel="noreferrer">https://github.com/gled-genpaylabs/genpay</a></li><li>Technical Documentation:</li><li>License:</li><li>Releases: <a href="https://github.com/gled-genpaylabs/genpay/releases" target="_blank" rel="noreferrer">https://github.com/gled-genpaylabs/genpay/releases</a></li><li>Issues:</li></ul>',7)]))}const u=a(s,[["render",o]]);export{h as __pageData,u as default};
