{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Genpay",
  "scopeName": "source.genpay",
  "fileTypes": ["genpay", "genpay"],
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#types"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#chars"
    },
    {
      "include": "#macros"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#structures"
    },
    {
      "include": "#imports-includes"
    },
    {
      "include": "#special-identifiers"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.genpay",
          "match": "//.*$"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.genpay",
          "match": "\\b(if|else|while|for|break|return)\\b"
        },
        {
          "name": "keyword.declaration.genpay",
          "match": "\\b(let|pub|fn|import|include|extern|struct|enum|typedef|_extern_declare)\\b"
        },
        {
          "name": "constant.language.genpay",
          "match": "\\b(true|false|NULL)\\b"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.primitive.genpay",
          "match": "\\b(i8|i16|i32|i64|u8|u16|u32|u64|usize|f32|f64|bool|char|void)\\b"
        },
        {
          "name": "storage.type.pointer.genpay",
          "match": "\\*\\b(i8|i16|i32|i64|u8|u16|u32|u64|usize|f32|f64|bool|char|void)\\b"
        },
        {
          "name": "entity.name.type.struct.genpay",
          "match": "\\b[A-Z][a-zA-Z0-9_]*\\b(?=\\s*\\{)"
        },
        {
          "name": "storage.type.genpay",
          "match": "\\b[A-Z][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.assignment.genpay",
          "match": "="
        },
        {
          "name": "keyword.operator.arithmetic.genpay",
          "match": "(\\+|-|\\*|/|%)"
        },
        {
          "name": "keyword.operator.comparison.genpay",
          "match": "(==|!=|<|>|<=|>=)"
        },
        {
          "name": "keyword.operator.dereference.genpay",
          "match": "\\*"
        },
        {
          "name": "keyword.operator.address-of.genpay",
          "match": "&"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.genpay",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.genpay",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.hex.genpay",
          "match": "\\b0x[0-9a-fA-F_]+\\b"
        },
        {
          "name": "constant.numeric.binary.genpay",
          "match": "\\b0b[01_]+\\b"
        },
        {
          "name": "constant.numeric.integer.genpay",
          "match": "\\b\\d[\\d_]*\\b"
        },
        {
          "name": "constant.numeric.float.genpay",
          "match": "\\b\\d[\\d_]*\\.\\d[\\d_]*([eE][+-]?\\d[\\d_]*)?\\b"
        }
      ]
    },
    "chars": {
      "patterns": [
        {
          "name": "constant.character.genpay",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.genpay",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "macros": {
      "patterns": [
        {
          "name": "entity.name.function.macro.genpay",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*!\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.genpay",
          "match": "\\bfn\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\b"
        },
        {
          "name": "support.function.builtin.genpay",
          "match": "\\b(println|print)\\b(?=\\()"
        }
      ]
    },
    "structures": {
      "patterns": [
        {
          "name": "entity.name.type.structure.genpay",
          "match": "\\bstruct\\s+([A-Z][a-zA-Z0-9_]*)\\b"
        },
        {
          "name": "variable.other.member.genpay",
          "match": "\\.([a-zA-Z_][a-zA-Z0-9_]*)\\b"
        }
      ]
    },
    "imports-includes": {
      "patterns": [
        {
          "name": "keyword.control.import.genpay",
          "match": "\\b(include|import)\\b"
        },
        {
          "name": "string.quoted.library.genpay",
          "match": "\"@[a-zA-Z_][a-zA-Z0-9_]*\""
        }
      ]
    },
    "special-identifiers": {
      "patterns": [
        {
          "name": "variable.language.placeholder.genpay",
          "match": "\\b_\\b"
        }
      ]
    }
  }
}
